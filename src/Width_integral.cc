/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 
#include "RooNumIntConfig.h"
#include "RooRealVar.h" 

#include "../interface/Width_integral.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include "RooRealIntegral.h" 
#include <math.h> 
#include "TMath.h" 
#include "RooListProxy.h" 
#include "RooHistFunc.h" 

using namespace std;

ClassImp(Width_integral) 

	Width_integral::Width_integral(const char *name, const char *title, 
			 RooAbsReal& _a, RooAbsReal& _b,  const RooArgList& inCoefList) :
		RooAbsReal(name,title), 
		a("a","a",this,_a),
		b("b","b",this,_b),
		_coefList("coefList","List of funcficients",this) 
{ 
	TIterator* coefIter = inCoefList.createIterator() ;
	RooAbsArg* func;
	while((func = (RooAbsArg*)coefIter->Next())) {
		if (!dynamic_cast<RooAbsReal*>(func)) {
			coutE(InputArguments) << "ERROR: :RooHighmass_conv(" << GetName() << ") funcficient " << func->GetName() << " is not of type RooAbsReal" << endl;
			assert(0);
		}
		_coefList.add(*func) ;
	}
} 


Width_integral::Width_integral(const Width_integral& other, const char* name) :  
	RooAbsReal(other,name), 
	a("a",this,other.a),
	b("b",this,other.b),
	_coefList("coefList",this,other._coefList)
{ 
} 



Double_t Width_integral::evaluate() const 
{ 

	Double_t inter = dynamic_cast<const RooHistFunc*>(_coefList.at(0))->getVal();
	return inter;	
} 


